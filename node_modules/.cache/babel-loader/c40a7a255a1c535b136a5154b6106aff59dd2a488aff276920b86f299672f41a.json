{"ast":null,"code":"var _jsxFileName = \"/Users/an-yohan/Downloads/spam4cut-main/spam/src/screen/IdolCam.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport Webcam from \"react-webcam\";\nimport \"./IdolCam.css\"; // IdolCam을 위한 추가 스타일링\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst idolPoses = [\"./pose1.png\",\n// 각 포즈 이미지 경로\n\"./pose2.png\", \"./pose3.png\", \"./pose4.png\"];\nconst IdolCam = ({\n  addPhoto,\n  photoCount\n}) => {\n  _s();\n  const webcamRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const [countdown, setCountdown] = useState(0);\n  const [photoIndex, setPhotoIndex] = useState(0); // 사진 인덱스 상태 추가\n  const [isProcessing, setIsProcessing] = useState(false); // 현재 처리 중인지 여부를 나타내는 상태 추가\n  const [capturedPhotos, setCapturedPhotos] = useState([]); // 촬영된 사진들을 저장하는 배열 상태 추가\n\n  const deviceId = \"7782baa2ef9fe736b816e8ecfcec158bd9057841d9a2f433e4006ed03f3570e8\";\n  const playSound = () => {\n    const audio = new Audio(\"./mp3.mp3\");\n    audio.play();\n  };\n  const capture = () => {\n    if (photoCount >= 4 || capturing) return; // 4장 이상이거나 촬영 중일 때는 시작하지 않음\n    setCapturing(true);\n    setCountdown(5); // 5초 카운트다운 시작\n    setPhotoIndex(0); // 촬영 인덱스 초기화\n  };\n  const handleAddPhoto = useCallback(imageSrc => {\n    addPhoto(imageSrc); // 부모 컴포넌트로 사진 전달\n    setCapturedPhotos(prevPhotos => [...prevPhotos, imageSrc]); // 사진 배열에 추가\n  }, [addPhoto]);\n  const cropImage = imageSrc => {\n    return new Promise(resolve => {\n      const img = new Image();\n      img.src = imageSrc;\n      img.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = 960;\n        canvas.height = 1280;\n        const ctx = canvas.getContext(\"2d\");\n        const scale = Math.max(canvas.width / img.width, canvas.height / img.height);\n        const x = canvas.width / 2 - img.width / 2 * scale;\n        const y = canvas.height / 2 - img.height / 2 * scale;\n        ctx.drawImage(img, x, y, img.width * scale, img.height * scale);\n        const croppedImageSrc = canvas.toDataURL(\"image/jpeg\", 1.0);\n        resolve(croppedImageSrc);\n      };\n    });\n  };\n  useEffect(() => {\n    let timer;\n    if (capturing && countdown > 0) {\n      timer = setTimeout(() => {\n        setCountdown(countdown - 1);\n      }, 1000);\n    } else if (countdown === 0 && capturing && photoIndex < 4 && !isProcessing) {\n      setIsProcessing(true); // 현재 처리 중임을 표시\n      const imageSrc = webcamRef.current.getScreenshot();\n      if (imageSrc) {\n        cropImage(imageSrc).then(croppedImage => {\n          handleAddPhoto(croppedImage); // 부모 컴포넌트로 사진 전달\n          playSound();\n          setPhotoIndex(photoIndex + 1); // 다음 사진 인덱스로\n          setCountdown(5); // 다시 5초 카운트다운 시작\n          setIsProcessing(false); // 처리 완료 후 false로 변경\n        });\n      } else {\n        setIsProcessing(false); // 이미지가 없을 경우 처리 중 상태 해제\n      }\n    }\n\n    // 4장의 사진을 모두 찍었으면 촬영 종료\n    if (photoIndex >= 4 || photoCount >= 4) {\n      setCapturing(false);\n    }\n    return () => clearTimeout(timer);\n  }, [capturing, countdown, handleAddPhoto, photoIndex, photoCount, isProcessing]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"idol-webcam-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"idol-webcam-container\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        className: \"idol-webcam\",\n        style: {\n          transform: \"scaleX(-1)\"\n        },\n        videoConstraints: {\n          width: 527,\n          height: 352,\n          deviceId: deviceId,\n          facingMode: \"user\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), capturing && countdown > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"idol-countdown-overlay\",\n        children: countdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: idolPoses[photoIndex] // 현재 photoIndex에 맞는 포즈 이미지 표시\n        ,\n        alt: \"Idol Pose\",\n        className: \"idol-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"idol-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC0AC\\uC9C4 \\uCC0D\\uC740 \\uAC1C\\uC218: \", photoCount, \" / 4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `idol-camera-icon ${capturing ? \"capturing\" : \"\"}`,\n          onClick: capture,\n          title: \"\\uC0AC\\uC9C4 \\uCC0D\\uAE30\",\n          style: {\n            cursor: capturing ? \"not-allowed\" : \"pointer\",\n            opacity: capturing ? 0.5 : 1\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/camera.png\",\n            alt: \"\\uC0AC\\uC9C4 \\uCC0D\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"idol-photo-gallery\",\n      children: capturedPhotos.map((photo, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo,\n        alt: `Captured ${index + 1}`,\n        className: \"idol-captured-photo\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(IdolCam, \"ilmGktcgyMuZAhdp7M7hoKf9p6E=\");\n_c = IdolCam;\nexport default IdolCam;\nvar _c;\n$RefreshReg$(_c, \"IdolCam\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","Webcam","jsxDEV","_jsxDEV","idolPoses","IdolCam","addPhoto","photoCount","_s","webcamRef","capturing","setCapturing","countdown","setCountdown","photoIndex","setPhotoIndex","isProcessing","setIsProcessing","capturedPhotos","setCapturedPhotos","deviceId","playSound","audio","Audio","play","capture","handleAddPhoto","imageSrc","prevPhotos","cropImage","Promise","resolve","img","Image","src","onload","canvas","document","createElement","width","height","ctx","getContext","scale","Math","max","x","y","drawImage","croppedImageSrc","toDataURL","timer","setTimeout","current","getScreenshot","then","croppedImage","clearTimeout","className","children","ref","screenshotFormat","style","transform","videoConstraints","facingMode","fileName","_jsxFileName","lineNumber","columnNumber","alt","onClick","title","cursor","opacity","map","photo","index","_c","$RefreshReg$"],"sources":["/Users/an-yohan/Downloads/spam4cut-main/spam/src/screen/IdolCam.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport Webcam from \"react-webcam\";\nimport \"./IdolCam.css\"; // IdolCam을 위한 추가 스타일링\n\nconst idolPoses = [\n  \"./pose1.png\", // 각 포즈 이미지 경로\n  \"./pose2.png\",\n  \"./pose3.png\",\n  \"./pose4.png\",\n];\n\nconst IdolCam = ({ addPhoto, photoCount }) => {\n  const webcamRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const [countdown, setCountdown] = useState(0);\n  const [photoIndex, setPhotoIndex] = useState(0); // 사진 인덱스 상태 추가\n  const [isProcessing, setIsProcessing] = useState(false); // 현재 처리 중인지 여부를 나타내는 상태 추가\n  const [capturedPhotos, setCapturedPhotos] = useState([]); // 촬영된 사진들을 저장하는 배열 상태 추가\n\n  const deviceId =\n    \"7782baa2ef9fe736b816e8ecfcec158bd9057841d9a2f433e4006ed03f3570e8\";\n\n  const playSound = () => {\n    const audio = new Audio(\"./mp3.mp3\");\n    audio.play();\n  };\n\n  const capture = () => {\n    if (photoCount >= 4 || capturing) return; // 4장 이상이거나 촬영 중일 때는 시작하지 않음\n    setCapturing(true);\n    setCountdown(5); // 5초 카운트다운 시작\n    setPhotoIndex(0); // 촬영 인덱스 초기화\n  };\n\n  const handleAddPhoto = useCallback(\n    (imageSrc) => {\n      addPhoto(imageSrc); // 부모 컴포넌트로 사진 전달\n      setCapturedPhotos((prevPhotos) => [...prevPhotos, imageSrc]); // 사진 배열에 추가\n    },\n    [addPhoto]\n  );\n\n  const cropImage = (imageSrc) => {\n    return new Promise((resolve) => {\n      const img = new Image();\n      img.src = imageSrc;\n      img.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = 960;\n        canvas.height = 1280;\n        const ctx = canvas.getContext(\"2d\");\n\n        const scale = Math.max(\n          canvas.width / img.width,\n          canvas.height / img.height\n        );\n        const x = canvas.width / 2 - (img.width / 2) * scale;\n        const y = canvas.height / 2 - (img.height / 2) * scale;\n\n        ctx.drawImage(img, x, y, img.width * scale, img.height * scale);\n        const croppedImageSrc = canvas.toDataURL(\"image/jpeg\", 1.0);\n        resolve(croppedImageSrc);\n      };\n    });\n  };\n\n  useEffect(() => {\n    let timer;\n    if (capturing && countdown > 0) {\n      timer = setTimeout(() => {\n        setCountdown(countdown - 1);\n      }, 1000);\n    } else if (\n      countdown === 0 &&\n      capturing &&\n      photoIndex < 4 &&\n      !isProcessing\n    ) {\n      setIsProcessing(true); // 현재 처리 중임을 표시\n      const imageSrc = webcamRef.current.getScreenshot();\n      if (imageSrc) {\n        cropImage(imageSrc).then((croppedImage) => {\n          handleAddPhoto(croppedImage); // 부모 컴포넌트로 사진 전달\n          playSound();\n          setPhotoIndex(photoIndex + 1); // 다음 사진 인덱스로\n          setCountdown(5); // 다시 5초 카운트다운 시작\n          setIsProcessing(false); // 처리 완료 후 false로 변경\n        });\n      } else {\n        setIsProcessing(false); // 이미지가 없을 경우 처리 중 상태 해제\n      }\n    }\n\n    // 4장의 사진을 모두 찍었으면 촬영 종료\n    if (photoIndex >= 4 || photoCount >= 4) {\n      setCapturing(false);\n    }\n\n    return () => clearTimeout(timer);\n  }, [\n    capturing,\n    countdown,\n    handleAddPhoto,\n    photoIndex,\n    photoCount,\n    isProcessing,\n  ]);\n\n  return (\n    <div className=\"idol-webcam-container\">\n      <div className=\"idol-webcam-container\">\n        <Webcam\n          audio={false}\n          ref={webcamRef}\n          screenshotFormat=\"image/jpeg\"\n          className=\"idol-webcam\"\n          style={{ transform: \"scaleX(-1)\" }}\n          videoConstraints={{\n            width: 527,\n            height: 352,\n            deviceId: deviceId,\n            facingMode: \"user\",\n          }}\n        />\n        {capturing && countdown > 0 && (\n          <div className=\"idol-countdown-overlay\">{countdown}</div>\n        )}\n        <img\n          src={idolPoses[photoIndex]} // 현재 photoIndex에 맞는 포즈 이미지 표시\n          alt=\"Idol Pose\"\n          className=\"idol-overlay\"\n        />\n        <div className=\"idol-controls\">\n          <p>사진 찍은 개수: {photoCount} / 4</p>\n          <div\n            className={`idol-camera-icon ${capturing ? \"capturing\" : \"\"}`}\n            onClick={capture}\n            title=\"사진 찍기\"\n            style={{\n              cursor: capturing ? \"not-allowed\" : \"pointer\",\n              opacity: capturing ? 0.5 : 1,\n            }}\n          >\n            <img src=\"/camera.png\" alt=\"사진 찍기\" />\n          </div>\n        </div>\n      </div>\n      {/* Captured photos display */}\n      <div className=\"idol-photo-gallery\">\n        {/* 찍은 사진들 확인 */}\n        {capturedPhotos.map((photo, index) => (\n          <img\n            key={index}\n            src={photo}\n            alt={`Captured ${index + 1}`}\n            className=\"idol-captured-photo\"\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default IdolCam;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}