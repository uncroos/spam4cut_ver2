{"ast":null,"code":"var _jsxFileName = \"/Users/an-yohan/Downloads/spam4cut-main/spam/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport StartScreen from \"./screen/StartScreen\";\nimport ChooseScreen from \"./screen/ChooseScreeen\";\nimport WebcamCapture from \"./screen/WebcamCapture\"; // 예시 프레임 카메라 컴포넌트\nimport PhotoFrame from \"./screen/PhotoFrame\";\nimport DownloadButton from \"./screen/DownloadButton\";\nimport IdolCam from \"./screen/IdolCam\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [photos, setPhotos] = useState([]);\n  const [isCapturing, setIsCapturing] = useState(false);\n  const [showStartScreen, setShowStartScreen] = useState(true);\n  const [selectedFrame, setSelectedFrame] = useState(null); // 선택된 프레임 상태 추가\n\n  const addPhoto = photo => {\n    if (photos.length < 4) {\n      setPhotos(prevPhotos => [...prevPhotos, photo]);\n    }\n    if (photos.length === 3) {\n      setIsCapturing(false);\n    }\n  };\n  const handleStart = () => {\n    setShowStartScreen(false);\n  };\n  const handleFrameSelect = frame => {\n    setSelectedFrame(frame); // 선택한 프레임 설정\n    setIsCapturing(true); // 사진 촬영 시작\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: showStartScreen ? /*#__PURE__*/_jsxDEV(StartScreen, {\n      onStart: handleStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : !selectedFrame ?\n    /*#__PURE__*/\n    // 프레임 선택 전 화면 표시\n    _jsxDEV(ChooseScreen, {\n      selectFrame: handleFrameSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : selectedFrame === \"park_frame\" ?\n    /*#__PURE__*/\n    // 선택된 프레임이 \"park_frame\"인 경우\n    _jsxDEV(IdolCam, {\n      addPhoto: addPhoto,\n      photoCount: photos.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) // IdolCam 렌더링\n    : isCapturing ? /*#__PURE__*/_jsxDEV(WebcamCapture, {\n      addPhoto: addPhoto,\n      photoCount: photos.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PhotoFrame, {\n        photos: photos,\n        frameType: selectedFrame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(DownloadButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"adUrC2jcq+MhqNhC0hyqWgfKw0U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","StartScreen","ChooseScreen","WebcamCapture","PhotoFrame","DownloadButton","IdolCam","jsxDEV","_jsxDEV","App","_s","photos","setPhotos","isCapturing","setIsCapturing","showStartScreen","setShowStartScreen","selectedFrame","setSelectedFrame","addPhoto","photo","length","prevPhotos","handleStart","handleFrameSelect","frame","className","children","onStart","fileName","_jsxFileName","lineNumber","columnNumber","selectFrame","photoCount","frameType","_c","$RefreshReg$"],"sources":["/Users/an-yohan/Downloads/spam4cut-main/spam/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport StartScreen from \"./screen/StartScreen\";\nimport ChooseScreen from \"./screen/ChooseScreeen\";\nimport WebcamCapture from \"./screen/WebcamCapture\"; // 예시 프레임 카메라 컴포넌트\nimport PhotoFrame from \"./screen/PhotoFrame\";\nimport DownloadButton from \"./screen/DownloadButton\";\nimport IdolCam from \"./screen/IdolCam\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [photos, setPhotos] = useState([]);\n  const [isCapturing, setIsCapturing] = useState(false);\n  const [showStartScreen, setShowStartScreen] = useState(true);\n  const [selectedFrame, setSelectedFrame] = useState(null); // 선택된 프레임 상태 추가\n\n  const addPhoto = (photo) => {\n    if (photos.length < 4) {\n      setPhotos((prevPhotos) => [...prevPhotos, photo]);\n    }\n    if (photos.length === 3) {\n      setIsCapturing(false);\n    }\n  };\n\n  const handleStart = () => {\n    setShowStartScreen(false);\n  };\n\n  const handleFrameSelect = (frame) => {\n    setSelectedFrame(frame); // 선택한 프레임 설정\n    setIsCapturing(true); // 사진 촬영 시작\n  };\n\n  return (\n    <div className=\"App\">\n      {showStartScreen ? (\n        <StartScreen onStart={handleStart} />\n      ) : !selectedFrame ? ( // 프레임 선택 전 화면 표시\n        <ChooseScreen selectFrame={handleFrameSelect} />\n      ) : selectedFrame === \"park_frame\" ? ( // 선택된 프레임이 \"park_frame\"인 경우\n        <IdolCam addPhoto={addPhoto} photoCount={photos.length} /> // IdolCam 렌더링\n      ) : isCapturing ? (\n        <WebcamCapture addPhoto={addPhoto} photoCount={photos.length} />\n      ) : (\n        <div>\n          <PhotoFrame photos={photos} frameType={selectedFrame} />{\" \"}\n          {/* 선택된 프레임에 따라 PhotoFrame 렌더링 */}\n          <DownloadButton />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}