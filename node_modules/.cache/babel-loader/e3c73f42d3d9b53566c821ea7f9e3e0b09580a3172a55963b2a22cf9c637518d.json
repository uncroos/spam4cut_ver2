{"ast":null,"code":"var _jsxFileName = \"/Users/an-yohan/Downloads/spam4cut-main/spam/src/screen/WebcamCapture.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport Webcam from \"react-webcam\";\nimport \"./WebcamCapture.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebcamCapture = ({\n  addPhoto,\n  photoCount\n}) => {\n  _s();\n  const webcamRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const [countdown, setCountdown] = useState(0);\n  const [photoIndex, setPhotoIndex] = useState(0); // 사진 인덱스 상태 추가\n  const [isProcessing, setIsProcessing] = useState(false); // 현재 처리 중인지 여부를 나타내는 상태 추가\n\n  const deviceId = \"7782baa2ef9fe736b816e8ecfcec158bd9057841d9a2f433e4006ed03f3570e8\";\n  const playSound = () => {\n    const audio = new Audio(\"./mp3.mp3\");\n    audio.play();\n  };\n  const capture = () => {\n    if (photoCount >= 4 || capturing) return; // 4장 이상이거나 촬영 중일 때는 시작하지 않음\n    setCapturing(true);\n    setCountdown(5); // 5초 카운트다운 시작\n    setPhotoIndex(0); // 촬영 인덱스 초기화\n  };\n  const handleAddPhoto = useCallback(imageSrc => {\n    addPhoto(imageSrc);\n  }, [addPhoto]);\n  const cropImage = imageSrc => {\n    return new Promise(resolve => {\n      const img = new Image();\n      img.src = imageSrc;\n      img.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = 960;\n        canvas.height = 1280;\n        const ctx = canvas.getContext(\"2d\");\n        const scale = Math.max(canvas.width / img.width, canvas.height / img.height);\n        const x = canvas.width / 2 - img.width / 2 * scale;\n        const y = canvas.height / 2 - img.height / 2 * scale;\n        ctx.drawImage(img, x, y, img.width * scale, img.height * scale);\n        const croppedImageSrc = canvas.toDataURL(\"image/jpeg\", 1.0);\n        resolve(croppedImageSrc);\n      };\n    });\n  };\n  useEffect(() => {\n    let timer;\n    if (capturing && countdown > 0) {\n      timer = setTimeout(() => {\n        setCountdown(countdown - 1);\n      }, 1000);\n    } else if (countdown === 0 && capturing && photoIndex < 4 && !isProcessing) {\n      setIsProcessing(true); // 현재 처리 중임을 표시\n      const imageSrc = webcamRef.current.getScreenshot();\n      if (imageSrc) {\n        cropImage(imageSrc).then(croppedImage => {\n          handleAddPhoto(croppedImage);\n          playSound();\n          setPhotoIndex(photoIndex + 1); // 다음 사진 인덱스로\n          setCountdown(5); // 다시 5초 카운트다운 시작\n          setIsProcessing(false); // 처리 완료 후 false로 변경\n        });\n      } else {\n        setIsProcessing(false); // 이미지가 없을 경우 처리 중 상태 해제\n      }\n    }\n\n    // 4장의 사진을 모두 찍었으면 촬영 종료\n    if (photoIndex >= 4 || photoCount >= 4) {\n      setCapturing(false);\n    }\n    return () => clearTimeout(timer);\n  }, [capturing, countdown, handleAddPhoto, photoIndex, photoCount, isProcessing]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"webcam-container\",\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      className: \"webcam\",\n      style: {\n        transform: \"-scaleX(-1)\"\n      },\n      videoConstraints: {\n        width: 960,\n        height: 1280,\n        deviceId: deviceId,\n        facingMode: \"user\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), capturing && countdown > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown-overlay\",\n      children: countdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC0AC\\uC9C4 \\uCC0D\\uC740 \\uAC1C\\uC218: \", photoCount, \" / 4\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `camera-icon ${capturing ? \"capturing\" : \"\"}`,\n        onClick: capture,\n        title: \"\\uC0AC\\uC9C4 \\uCC0D\\uAE30\",\n        style: {\n          cursor: capturing ? \"not-allowed\" : \"pointer\",\n          opacity: capturing ? 0.5 : 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/camera.png\",\n          alt: \"\\uC0AC\\uC9C4 \\uCC0D\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(WebcamCapture, \"GJP7rtcPRC6WZZ3VQNcvdSdSk/8=\");\n_c = WebcamCapture;\nexport default WebcamCapture;\nvar _c;\n$RefreshReg$(_c, \"WebcamCapture\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","Webcam","jsxDEV","_jsxDEV","WebcamCapture","addPhoto","photoCount","_s","webcamRef","capturing","setCapturing","countdown","setCountdown","photoIndex","setPhotoIndex","isProcessing","setIsProcessing","deviceId","playSound","audio","Audio","play","capture","handleAddPhoto","imageSrc","cropImage","Promise","resolve","img","Image","src","onload","canvas","document","createElement","width","height","ctx","getContext","scale","Math","max","x","y","drawImage","croppedImageSrc","toDataURL","timer","setTimeout","current","getScreenshot","then","croppedImage","clearTimeout","className","children","ref","screenshotFormat","style","transform","videoConstraints","facingMode","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","cursor","opacity","alt","_c","$RefreshReg$"],"sources":["/Users/an-yohan/Downloads/spam4cut-main/spam/src/screen/WebcamCapture.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport Webcam from \"react-webcam\";\nimport \"./WebcamCapture.css\";\n\nconst WebcamCapture = ({ addPhoto, photoCount }) => {\n  const webcamRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const [countdown, setCountdown] = useState(0);\n  const [photoIndex, setPhotoIndex] = useState(0); // 사진 인덱스 상태 추가\n  const [isProcessing, setIsProcessing] = useState(false); // 현재 처리 중인지 여부를 나타내는 상태 추가\n\n  const deviceId =\n    \"7782baa2ef9fe736b816e8ecfcec158bd9057841d9a2f433e4006ed03f3570e8\";\n\n  const playSound = () => {\n    const audio = new Audio(\"./mp3.mp3\");\n    audio.play();\n  };\n\n  const capture = () => {\n    if (photoCount >= 4 || capturing) return; // 4장 이상이거나 촬영 중일 때는 시작하지 않음\n    setCapturing(true);\n    setCountdown(5); // 5초 카운트다운 시작\n    setPhotoIndex(0); // 촬영 인덱스 초기화\n  };\n\n  const handleAddPhoto = useCallback(\n    (imageSrc) => {\n      addPhoto(imageSrc);\n    },\n    [addPhoto]\n  );\n\n  const cropImage = (imageSrc) => {\n    return new Promise((resolve) => {\n      const img = new Image();\n      img.src = imageSrc;\n      img.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = 960;\n        canvas.height = 1280;\n        const ctx = canvas.getContext(\"2d\");\n\n        const scale = Math.max(\n          canvas.width / img.width,\n          canvas.height / img.height\n        );\n        const x = canvas.width / 2 - (img.width / 2) * scale;\n        const y = canvas.height / 2 - (img.height / 2) * scale;\n\n        ctx.drawImage(img, x, y, img.width * scale, img.height * scale);\n        const croppedImageSrc = canvas.toDataURL(\"image/jpeg\", 1.0);\n        resolve(croppedImageSrc);\n      };\n    });\n  };\n\n  useEffect(() => {\n    let timer;\n    if (capturing && countdown > 0) {\n      timer = setTimeout(() => {\n        setCountdown(countdown - 1);\n      }, 1000);\n    } else if (\n      countdown === 0 &&\n      capturing &&\n      photoIndex < 4 &&\n      !isProcessing\n    ) {\n      setIsProcessing(true); // 현재 처리 중임을 표시\n      const imageSrc = webcamRef.current.getScreenshot();\n      if (imageSrc) {\n        cropImage(imageSrc).then((croppedImage) => {\n          handleAddPhoto(croppedImage);\n          playSound();\n          setPhotoIndex(photoIndex + 1); // 다음 사진 인덱스로\n          setCountdown(5); // 다시 5초 카운트다운 시작\n          setIsProcessing(false); // 처리 완료 후 false로 변경\n        });\n      } else {\n        setIsProcessing(false); // 이미지가 없을 경우 처리 중 상태 해제\n      }\n    }\n\n    // 4장의 사진을 모두 찍었으면 촬영 종료\n    if (photoIndex >= 4 || photoCount >= 4) {\n      setCapturing(false);\n    }\n\n    return () => clearTimeout(timer);\n  }, [\n    capturing,\n    countdown,\n    handleAddPhoto,\n    photoIndex,\n    photoCount,\n    isProcessing,\n  ]);\n\n  return (\n    <div className=\"webcam-container\">\n      <Webcam\n        audio={false}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        className=\"webcam\"\n        style={{ transform: \"-scaleX(-1)\" }}\n        videoConstraints={{\n          width: 960,\n          height: 1280,\n          deviceId: deviceId,\n          facingMode: \"user\",\n        }}\n      />\n      {capturing && countdown > 0 && (\n        <div className=\"countdown-overlay\">{countdown}</div>\n      )}\n      <div className=\"controls\">\n        <p>사진 찍은 개수: {photoCount} / 4</p>\n        <div\n          className={`camera-icon ${capturing ? \"capturing\" : \"\"}`}\n          onClick={capture}\n          title=\"사진 찍기\"\n          style={{\n            cursor: capturing ? \"not-allowed\" : \"pointer\",\n            opacity: capturing ? 0.5 : 1,\n          }}\n        >\n          <img src=\"/camera.png\" alt=\"사진 찍기\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WebcamCapture;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAMC,SAAS,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEzD,MAAMmB,QAAQ,GACZ,kEAAkE;EAEpE,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,WAAW,CAAC;IACpCD,KAAK,CAACE,IAAI,CAAC,CAAC;EACd,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIhB,UAAU,IAAI,CAAC,IAAIG,SAAS,EAAE,OAAO,CAAC;IAC1CC,YAAY,CAAC,IAAI,CAAC;IAClBE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IACjBE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,MAAMS,cAAc,GAAGvB,WAAW,CAC/BwB,QAAQ,IAAK;IACZnB,QAAQ,CAACmB,QAAQ,CAAC;EACpB,CAAC,EACD,CAACnB,QAAQ,CACX,CAAC;EAED,MAAMoB,SAAS,GAAID,QAAQ,IAAK;IAC9B,OAAO,IAAIE,OAAO,CAAEC,OAAO,IAAK;MAC9B,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,GAAG,GAAGN,QAAQ;MAClBI,GAAG,CAACG,MAAM,GAAG,MAAM;QACjB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QAC/CF,MAAM,CAACG,KAAK,GAAG,GAAG;QAClBH,MAAM,CAACI,MAAM,GAAG,IAAI;QACpB,MAAMC,GAAG,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;QAEnC,MAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,CACpBT,MAAM,CAACG,KAAK,GAAGP,GAAG,CAACO,KAAK,EACxBH,MAAM,CAACI,MAAM,GAAGR,GAAG,CAACQ,MACtB,CAAC;QACD,MAAMM,CAAC,GAAGV,MAAM,CAACG,KAAK,GAAG,CAAC,GAAIP,GAAG,CAACO,KAAK,GAAG,CAAC,GAAII,KAAK;QACpD,MAAMI,CAAC,GAAGX,MAAM,CAACI,MAAM,GAAG,CAAC,GAAIR,GAAG,CAACQ,MAAM,GAAG,CAAC,GAAIG,KAAK;QAEtDF,GAAG,CAACO,SAAS,CAAChB,GAAG,EAAEc,CAAC,EAAEC,CAAC,EAAEf,GAAG,CAACO,KAAK,GAAGI,KAAK,EAAEX,GAAG,CAACQ,MAAM,GAAGG,KAAK,CAAC;QAC/D,MAAMM,eAAe,GAAGb,MAAM,CAACc,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC;QAC3DnB,OAAO,CAACkB,eAAe,CAAC;MAC1B,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED9C,SAAS,CAAC,MAAM;IACd,IAAIgD,KAAK;IACT,IAAItC,SAAS,IAAIE,SAAS,GAAG,CAAC,EAAE;MAC9BoC,KAAK,GAAGC,UAAU,CAAC,MAAM;QACvBpC,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;MAC7B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM,IACLA,SAAS,KAAK,CAAC,IACfF,SAAS,IACTI,UAAU,GAAG,CAAC,IACd,CAACE,YAAY,EACb;MACAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;MACvB,MAAMQ,QAAQ,GAAGhB,SAAS,CAACyC,OAAO,CAACC,aAAa,CAAC,CAAC;MAClD,IAAI1B,QAAQ,EAAE;QACZC,SAAS,CAACD,QAAQ,CAAC,CAAC2B,IAAI,CAAEC,YAAY,IAAK;UACzC7B,cAAc,CAAC6B,YAAY,CAAC;UAC5BlC,SAAS,CAAC,CAAC;UACXJ,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;UAC/BD,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;UACjBI,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC;MACJ,CAAC,MAAM;QACLA,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;MAC1B;IACF;;IAEA;IACA,IAAIH,UAAU,IAAI,CAAC,IAAIP,UAAU,IAAI,CAAC,EAAE;MACtCI,YAAY,CAAC,KAAK,CAAC;IACrB;IAEA,OAAO,MAAM2C,YAAY,CAACN,KAAK,CAAC;EAClC,CAAC,EAAE,CACDtC,SAAS,EACTE,SAAS,EACTY,cAAc,EACdV,UAAU,EACVP,UAAU,EACVS,YAAY,CACb,CAAC;EAEF,oBACEZ,OAAA;IAAKmD,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BpD,OAAA,CAACF,MAAM;MACLkB,KAAK,EAAE,KAAM;MACbqC,GAAG,EAAEhD,SAAU;MACfiD,gBAAgB,EAAC,YAAY;MAC7BH,SAAS,EAAC,QAAQ;MAClBI,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAc,CAAE;MACpCC,gBAAgB,EAAE;QAChBzB,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,IAAI;QACZnB,QAAQ,EAAEA,QAAQ;QAClB4C,UAAU,EAAE;MACd;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACDxD,SAAS,IAAIE,SAAS,GAAG,CAAC,iBACzBR,OAAA;MAAKmD,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAE5C;IAAS;MAAAmD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACpD,eACD9D,OAAA;MAAKmD,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBpD,OAAA;QAAAoD,QAAA,GAAG,0CAAU,EAACjD,UAAU,EAAC,MAAI;MAAA;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACjC9D,OAAA;QACEmD,SAAS,EAAE,eAAe7C,SAAS,GAAG,WAAW,GAAG,EAAE,EAAG;QACzDyD,OAAO,EAAE5C,OAAQ;QACjB6C,KAAK,EAAC,2BAAO;QACbT,KAAK,EAAE;UACLU,MAAM,EAAE3D,SAAS,GAAG,aAAa,GAAG,SAAS;UAC7C4D,OAAO,EAAE5D,SAAS,GAAG,GAAG,GAAG;QAC7B,CAAE;QAAA8C,QAAA,eAEFpD,OAAA;UAAK2B,GAAG,EAAC,aAAa;UAACwC,GAAG,EAAC;QAAO;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1D,EAAA,CAjIIH,aAAa;AAAAmE,EAAA,GAAbnE,aAAa;AAmInB,eAAeA,aAAa;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}