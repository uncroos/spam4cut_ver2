{"ast":null,"code":"var _jsxFileName = \"/Users/an-yohan/Downloads/spam4cut-main/spam/src/screen/DownloadButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport html2canvas from \"html2canvas\";\nimport \"./DownloadButton.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloadButton = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const captureImage = action => {\n    setIsLoading(true);\n    const frame = document.querySelector(\".photo-frame-container\");\n    if (!frame) {\n      alert(\"프레임을 찾을 수 없습니다.\");\n      setIsLoading(false);\n      return;\n    }\n\n    // 모든 이미지가 로드될 때까지 기다립니다.\n    const images = frame.querySelectorAll(\"img\");\n    const imagePromises = Array.from(images).map(img => {\n      if (img.complete) return Promise.resolve();\n      return new Promise(resolve => {\n        img.onload = resolve;\n        img.onerror = resolve; // 에러가 발생해도 진행합니다.\n      });\n    });\n    Promise.all(imagePromises).then(() => {\n      const elementWidth = frame.offsetWidth;\n      const elementHeight = frame.offsetHeight;\n      html2canvas(frame, {\n        scale: 2,\n        useCORS: true,\n        backgroundColor: null,\n        width: elementWidth,\n        height: elementHeight,\n        scrollX: -window.scrollX,\n        scrollY: -window.scrollY\n      }).then(canvas => {\n        if (action === \"print\") {\n          const imgData = canvas.toDataURL(\"image/png\");\n          const printWindow = window.open(\"\", \"\", \"height=600,width=800\");\n          printWindow.document.write(`<img width=\"100%\" height=\"100%\" src=\"${imgData}\">`);\n          printWindow.document.close();\n          printWindow.focus();\n          printWindow.print();\n          printWindow.close();\n        } else if (action === \"download\") {\n          const link = document.createElement(\"a\");\n          link.href = canvas.toDataURL(\"image/png\");\n          link.download = \"insaengnecut.png\";\n          link.click();\n        }\n        setIsLoading(false);\n      }).catch(err => {\n        console.error(\"캡처 중 오류 발생:\", err);\n        alert(\"이미지 캡처 중 오류가 발생했습니다.\");\n        setIsLoading(false);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"download-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"print-button\",\n      onClick: () => captureImage(\"print\"),\n      disabled: isLoading,\n      children: isLoading ? \"처리 중...\" : \"출력\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"download-button\",\n      onClick: () => captureImage(\"download\"),\n      disabled: isLoading,\n      children: isLoading ? \"처리 중...\" : \"다운로드\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(DownloadButton, \"EmvgwIb3cHpoFpeP+WmEDbjx4y4=\");\n_c = DownloadButton;\nexport default DownloadButton;\nvar _c;\n$RefreshReg$(_c, \"DownloadButton\");","map":{"version":3,"names":["React","useState","html2canvas","jsxDEV","_jsxDEV","DownloadButton","_s","isLoading","setIsLoading","captureImage","action","frame","document","querySelector","alert","images","querySelectorAll","imagePromises","Array","from","map","img","complete","Promise","resolve","onload","onerror","all","then","elementWidth","offsetWidth","elementHeight","offsetHeight","scale","useCORS","backgroundColor","width","height","scrollX","window","scrollY","canvas","imgData","toDataURL","printWindow","open","write","close","focus","print","link","createElement","href","download","click","catch","err","console","error","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/an-yohan/Downloads/spam4cut-main/spam/src/screen/DownloadButton.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport html2canvas from \"html2canvas\";\nimport \"./DownloadButton.css\";\n\nconst DownloadButton = () => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const captureImage = (action) => {\n    setIsLoading(true);\n    const frame = document.querySelector(\".photo-frame-container\");\n\n    if (!frame) {\n      alert(\"프레임을 찾을 수 없습니다.\");\n      setIsLoading(false);\n      return;\n    }\n\n    // 모든 이미지가 로드될 때까지 기다립니다.\n    const images = frame.querySelectorAll(\"img\");\n    const imagePromises = Array.from(images).map((img) => {\n      if (img.complete) return Promise.resolve();\n      return new Promise((resolve) => {\n        img.onload = resolve;\n        img.onerror = resolve; // 에러가 발생해도 진행합니다.\n      });\n    });\n\n    Promise.all(imagePromises).then(() => {\n      const elementWidth = frame.offsetWidth;\n      const elementHeight = frame.offsetHeight;\n\n      html2canvas(frame, {\n        scale: 2,\n        useCORS: true,\n        backgroundColor: null,\n        width: elementWidth,\n        height: elementHeight,\n        scrollX: -window.scrollX,\n        scrollY: -window.scrollY,\n      })\n        .then((canvas) => {\n          if (action === \"print\") {\n            const imgData = canvas.toDataURL(\"image/png\");\n            const printWindow = window.open(\"\", \"\", \"height=600,width=800\");\n            printWindow.document.write(\n              `<img width=\"100%\" height=\"100%\" src=\"${imgData}\">`\n            );\n            printWindow.document.close();\n            printWindow.focus();\n            printWindow.print();\n            printWindow.close();\n          } else if (action === \"download\") {\n            const link = document.createElement(\"a\");\n            link.href = canvas.toDataURL(\"image/png\");\n            link.download = \"insaengnecut.png\";\n            link.click();\n          }\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          console.error(\"캡처 중 오류 발생:\", err);\n          alert(\"이미지 캡처 중 오류가 발생했습니다.\");\n          setIsLoading(false);\n        });\n    });\n  };\n\n  return (\n    <div className=\"download-box\">\n      <button\n        className=\"print-button\"\n        onClick={() => captureImage(\"print\")}\n        disabled={isLoading}\n      >\n        {isLoading ? \"처리 중...\" : \"출력\"}\n      </button>\n      <button\n        className=\"download-button\"\n        onClick={() => captureImage(\"download\")}\n        disabled={isLoading}\n      >\n        {isLoading ? \"처리 중...\" : \"다운로드\"}\n      </button>\n    </div>\n  );\n};\n\nexport default DownloadButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}